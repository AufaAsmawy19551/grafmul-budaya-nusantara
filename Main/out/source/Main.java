/* autogenerated by Processing revision 1282 on 2022-07-06 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class Main extends PApplet {


 public void setup() {
  background (0xFFFFFFFF);
 /* size commented out by preprocessor */;
  // size(1920, 1080);
  // background(255, 255, 0);
}

 public void draw(){
  // Guru guru = new Guru();
  // guru.drawBody();

  // Murid murid = new Murid();
  // murid.drawBody();

pushMatrix();
  RumahSulsel rumahSulsel = new RumahSulsel();
  rumahSulsel.draw(1000, 0, 0, 0.5f);
popMatrix();
}
public class Person  {
  
  public Person() {
    
  }
  
  public void drawBody() {
    rect(0, 0, 300, 300);
  }
  
  public void drawHair() {
    
  }
  
  public void drawEye() {
    
  }
  
  public void drawMouth() {
    
  }
  
}
public class Murid extends Person {

  public Murid () {
    
  }

  public void drawBody() {
    fill(255, 0, 0);
    rect(0, 0, 100, 100);
  }

}

public class Guru extends Person {

  public Guru () {
    
  }

  public void drawBody() {
    fill(0, 255, 0);
    rect(100, 100, 100, 100);
  }

}

public class Rumah {

  public Rumah () {
    
  }

}

public class RumahAceh extends Rumah {

  public RumahAceh () {
    
  }

}

public class RumahJateng extends Rumah {

  public RumahJateng () {
    
  }

}

public class RumahPapua extends Rumah {

  public RumahPapua () {
    
  }

}

public class RumahSulsel extends Rumah {

  public RumahSulsel () {
    
  }

  public void draw(int x, int y, int z, float s){
    pushMatrix();

      translate(x, y, z);
      scale(s);
      
         // atap
      beginShape();
      noStroke();
       fill(0xFF76BA99);
       vertex(549.5f, 72);
       vertex(562, 58);
       vertex(785, 319);
       // quadraticvertex(titik dilengkungkan, nilai pelengkungan, x akhir, y akhir)
       quadraticVertex(1098, 620, 1373.5f, 346);
       vertex(1430, 354);
       quadraticVertex(1312.5f, 500, 1337, 670);
       vertex(930, 646);
      endShape(CLOSE); 

      // atap genteng
      beginShape();
      noStroke();
        fill(0xFFB09B71);
        vertex(785, 319.5f);
        quadraticVertex(1098, 620, 1373.5f, 346);
        vertex(1430, 354);
        quadraticVertex(1124.5f, 730, 832, 380);
        vertex(785, 319.5f); 
      endShape();


      // depan & badan
      beginShape();
       fill(168, 121, 50);
       vertex(490, 139);

       vertex(549.5f, 72);
       vertex(930, 638);
       vertex(1337, 670);
       vertex(1300, 688);
       vertex(1285, 791);
       vertex(730, 753);
       vertex(730, 600);
       vertex(701, 638);
       quadraticVertex(745, 500, 490, 139);
      endShape();
      beginShape();
        fill(0xFF603601);
        vertex(490, 139);
        vertex(501.56f, 126);
        quadraticVertex(741, 470, 741, 600);
        vertex(741, 600);
        vertex(701, 638);
        quadraticVertex(745, 500, 490, 139);
      endShape();
      // depan
      fill(0xFF603601);
      triangle(490, 139, 562, 58, 528, 37);
      beginShape();
        fill(0xFF603601);
        vertex(535.33f, 88);
        vertex (916.5f, 638);
        vertex(930, 638);
        vertex(549.56f, 72);  
      endShape();
      // kayu didepan
      beginShape();
        fill(0xFF603601);
        vertex(534.69f, 179.06f);
        vertex(579.45f, 150.87f);
        vertex(586.38f, 161.88f);
        vertex(541.62f, 190.06f);
      endShape();
      beginShape();
        fill(0xFF603601);
        vertex(579.19f, 247.79f);
        vertex(586.57f, 258.49f);
        vertex(631.76f, 227.33f);
        vertex(624.38f, 216.62f);
      endShape();
      beginShape();
        fill(0xFF603601);
        vertex(619.9f, 311.54f);
        vertex(627.28f, 322.24f);
        vertex(674.57f, 289.62f);
        vertex(667.19f, 278.92f);
      endShape();
      beginShape();
        fill(0xFF603601);
        vertex(653.39f, 367.03f);
        vertex(660.78f, 377.73f);
        vertex(712.24f, 343.62f);
        vertex(704.86f, 332.92f);
      endShape();
      beginShape();
        fill(0xFF603601);
        vertex(710, 489.07f);
        vertex(705, 510);
        vertex(798.01f, 455);
        vertex(792.76f, 440);
      endShape();

      // END ATAP



      // BADAN RUMAH

      // jendela
      beginShape();
        fill(0xFF603601);
        vertex(968, 674);
        vertex(1024, 678);
        vertex(1024, 724);
        vertex(968, 720);
      endShape();
      beginShape();
        fill(0xFF603601);
        vertex(1058, 680);
        vertex(1114, 684);
        vertex(1114, 731);
        vertex(1058, 726);
      endShape();
      beginShape();
        fill(0xFF603601);
        vertex(1145, 688);
        vertex(1201, 692);
        vertex(1201, 738);
        vertex(1145, 734);
      endShape();
      beginShape();
        fill(0xFF603601);
        vertex(1228, 694);
        vertex(1284, 698);
        vertex(1284, 744);
        vertex(1228, 740);
      endShape();
      // END JENDELA


       beginShape();
        noFill();
        stroke(0xFF603601);
        strokeWeight(5);
        vertex(930, 640);
        //vertex(930, 763);
        quadraticVertex(880, 701.5f , 930, 763);
      endShape();


      // KAKI RUMAH
      fill(0xFF603601);
      //kanan
      rect(733, 755, 40, 165, 0, 0, 30, 30);
      rect(995, 773, 40, 150, 0, 0, 30, 30);
      rect(1152, 783, 40, 145, 0, 0, 30, 30);
      //kiri
      rect(933, 769, 40, 170, 0, 0, 30, 30);
      rect(1090, 780, 40, 165, 0, 0, 30, 30);
      rect(1242, 790, 40, 160, 0, 0, 30, 30);

      // PINTU
      fill(0xFF603601);
      noStroke();
      rect(783, 602, 85, 140);
      fill(0xFFFF0B0B);
      ellipse(855, 668, 10,15);
        
    popMatrix();
  }

}


  public void settings() { size(1920, 1080); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "Main" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
